<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/rabbit 
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

    <description>rabbitmq 连接服务配置</description>

    <!-- 消息对象json转换类 -->
    <!--     <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" /> -->
    <!-- 定义RabbitMQ的连接工厂 -->
    <rabbit:connection-factory id="rabbidMQConnectionFactory" host="${spring.rabbitmq.host}"
                               username="${spring.rabbitmq.username}" password="${spring.rabbitmq.password}" port="5672" />

    <!-- MQ的管理，包括队列、交换器等 -->
    <rabbit:admin connection-factory="rabbidMQConnectionFactory"/>

    <!-- 电子登记簿消息队列 -->
    <!-- 定义Rabbit模板，如果项目只有一个消息队列，可以指定连接工厂以及定义exchange，否则不需要指定的exchange -->
    <!-- <rabbit:template id="amqpTemplate" exchange="supermap-realestate-writedjb-exchange" connection-factory="rabbidMQConnectionFactory"/> -->
    <rabbit:template id="amqpTemplate" connection-factory="rabbidMQConnectionFactory" />

    <!-- 定义队列，自动声明 -->
    <!-- durable:是否持久化 ；       exclusive: 仅创建者可以使用的私有队列，断开后自动删除；    auto_delete: 当所有消费客户端连接断开后，是否自动删除队列  -->
    <rabbit:queue id="supermap-MortgageRPC-writeDJB-queue" name="supermap-MortgageRPC-writeDJB-queue" durable="true"  auto-delete="false" exclusive="false"  auto-declare="true" />
    <!-- 定义交换器，自动声明 -->
    <rabbit:fanout-exchange name="supermap-MortgageRPC-writeDJB-exchange" durable="true"   id="supermap-MortgageRPC-writeDJB-exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="supermap-MortgageRPC-writeDJB-queue"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!-- 定义队列，自动声明 -->
    <!-- durable:是否持久化 ；       exclusive: 仅创建者可以使用的私有队列，断开后自动删除；    auto_delete: 当所有消费客户端连接断开后，是否自动删除队列  -->
    <rabbit:queue id="supermap-MortgageRPC-sendShjdToMRPC-queue" name="supermap-MortgageRPC-sendShjdToMRPC-queue" durable="true"   auto-delete="false" exclusive="false"   auto-declare="true" />
    <!-- 定义交换器，自动声明 -->
    <rabbit:fanout-exchange name="supermap-MortgageRPC-sendShjdToMRPC-exchange" durable="true"   id="supermap-MortgageRPC-sendShjdToMRPC-exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="supermap-MortgageRPC-sendShjdToMRPC-queue"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!-- 定义队列，自动声明 -->
    <!-- durable:是否持久化 ；       exclusive: 仅创建者可以使用的私有队列，断开后自动删除；    auto_delete: 当所有消费客户端连接断开后，是否自动删除队列  -->
    <rabbit:queue id="supermap-MortgageRPC-ElectronicCertificate-queue" name="supermap-MortgageRPC-ElectronicCertificate-queue" durable="true"   auto-delete="false" exclusive="false"   auto-declare="true" />
    <!-- 定义交换器，自动声明 -->
    <rabbit:fanout-exchange name="supermap-MortgageRPC-ElectronicCertificate-exchange" durable="true"   id="supermap-MortgageRPC-ElectronicCertificate-exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="supermap-MortgageRPC-ElectronicCertificate-queue"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>
    
    
    <rabbit:queue id="supermap-MortgageRPC-PassBackToMRPC-queue" name="supermap-MortgageRPC-PassBackToMRPC-queue" durable="true"   auto-delete="false" exclusive="false"   auto-declare="true" />
    <!-- 定义交换器，自动声明 -->
    <rabbit:fanout-exchange name="supermap-MortgageRPC-PassBackToMRPC-exchange" durable="true"   id="supermap-MortgageRPC-PassBackToMRPC-exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="supermap-MortgageRPC-PassBackToMRPC-queue"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>
    
    <rabbit:queue id="supermap-MortgageRPC-PassBackEnterprise-queue" name="supermap-MortgageRPC-PassBackEnterprise-queue" durable="true"  auto-delete="false" exclusive="false"  auto-declare="true" />
    <!-- 定义交换器，自动声明 -->
    <rabbit:fanout-exchange name="supermap-MortgageRPC-PassBackEnterprise-exchange" durable="true"   id="supermap-MortgageRPC-PassBackEnterprise-exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="supermap-MortgageRPC-PassBackEnterprise-queue"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>
    
    <rabbit:queue id="supermap-MortgageRPC-PassOverEnterprise-queue" name="supermap-MortgageRPC-PassOverEnterprise-queue" durable="true"    auto-declare="true" />
    <!-- 定义交换器，自动声明 -->
    <rabbit:fanout-exchange name="supermap-MortgageRPC-PassOverEnterprise-exchange" durable="true"   id="supermap-MortgageRPC-PassOverEnterprise-exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="supermap-MortgageRPC-PassOverEnterprise-queue"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"></bean>
    <!-- 消费端 -->
    <!-- 消费者：电子证照 -->
    <bean id="baseConsumer" class="com.supermap.intelligent.rabbitmq.consumer.BaseConsumer"></bean>
    <rabbit:listener-container connection-factory="rabbidMQConnectionFactory">
        <rabbit:listener ref="baseConsumer" method="electronicCertificateReceivedMessage"
                         queue-names="supermap-MortgageRPC-ElectronicCertificate-queue"/>
    </rabbit:listener-container>
    <!-- 消费者：审批进度 -->
    <rabbit:listener-container connection-factory="rabbidMQConnectionFactory">
        <rabbit:listener ref="baseConsumer" method="sHJDReceivedMessage"
                         queue-names="supermap-MortgageRPC-sendShjdToMRPC-queue"/>
    </rabbit:listener-container>
    <!-- 消费者：登记簿 -->
    <rabbit:listener-container connection-factory="rabbidMQConnectionFactory" acknowledge="auto">
        <rabbit:listener ref="baseConsumer" method="dJBReceivedMessage"
                         queue-names="supermap-MortgageRPC-writeDJB-queue"/>
    </rabbit:listener-container>
    
    <rabbit:listener-container connection-factory="rabbidMQConnectionFactory" acknowledge="auto">
        <rabbit:listener ref="baseConsumer" method="PassBackReceivedMessage"
                         queue-names="supermap-MortgageRPC-PassBackToMRPC-queue"/>
    </rabbit:listener-container>
    
    <rabbit:listener-container connection-factory="rabbidMQConnectionFactory" acknowledge="auto">
        <rabbit:listener ref="baseConsumer" method="PassBackEnterpriseMessage"
                         queue-names="supermap-MortgageRPC-PassBackEnterprise-queue"/>
    </rabbit:listener-container>
    
    <rabbit:listener-container connection-factory="rabbidMQConnectionFactory" acknowledge="auto">
        <rabbit:listener ref="baseConsumer" method="PassOverEnterpriseMessage"
                         queue-names="supermap-MortgageRPC-PassOverEnterprise-queue"/>
    </rabbit:listener-container>

</beans>