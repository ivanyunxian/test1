<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 配置数据源 c3p0 -->

	<bean id="dataSourceDJ"
		class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${dj.jdbc.driver}" />
		<property name="url" value="${dj.jdbc.url}" />
		<property name="username" value="${dj.jdbc.username}" />
		<property name="password" value="${dj.jdbc.password}" />


		<!-- 最大并发连接数 -->  
        <property name = "maxActive" value = "500" />  
        <!-- 初始化连接数量 -->  
        <property name = "initialSize" value = "5" />  
        <!-- 配置获取连接等待超时的时间 -->  
        <property name = "maxWait" value = "30000" />  
        <!-- 最小空闲连接数 -->  
        <property name = "minIdle" value = "15" />    
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name = "timeBetweenEvictionRunsMillis" value ="3000" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name = "minEvictableIdleTimeMillis" value ="300000" />    
        <property name = "testWhileIdle" value = "true" />    
        <property name = "testOnBorrow" value = "false" />    
        <property name = "testOnReturn" value = "false" />    
        <property name = "maxOpenPreparedStatements" value ="100" />  
        <!-- 打开 removeAbandoned 功能 -->  
        <property name = "removeAbandoned" value = "true" />  
        <!-- 1800 秒，也就是 30 分钟 -->  
        <property name = "removeAbandonedTimeout" value ="1800" />    
	</bean>

	<!-- 配置hibernate的SessionFactory -->
	<bean id="sessionFactoryDJ"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入数据源 相关信息看源码 -->
		<property name="dataSource" ref="dataSourceDJ" />
		<!-- hibernate配置信息 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<!-- 扫描hibernate注解配置的entity -->
		<property name="packagesToScan">
			<list>
				<value>com.supermap.**.model</value>
			</list>
		</property>
	</bean>


	<!-- 配置事务管理器 -->
	<bean id="transactionManagerDJ"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactoryDJ" />
	</bean>

	<!-- 配置事务增强处理Bean，指定事务管理器 -->
	<tx:advice id="transactionAdviceDJ"
		transaction-manager="transactionManagerDJ">
		<!-- 配置详细事务处理语义 -->
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="SUPPORTS"
				read-only="true" />

			<tx:method name="get*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS"
				read-only="true" />

			<!-- 其他采用默认事务方式 -->
			<tx:method name="*" />

		</tx:attributes>
	</tx:advice>
	<tx:annotation-driven
		transaction-manager="transactionManagerDJ" />

    <!-- Spring aop事务管理 -->
	<aop:config>
		<!-- 配置切入点 -->
		<!-- <aop:pointcut id="transactionPointcut" expression="execution(* com.supermap.wisdombusiness.core.service..*Impl.*(..))"/> -->
		<!-- com.supermap.wisdombusiness.core.dao.impl; -->
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.supermap.realestate.registration.service..*Tool.*(..)) " />

		<!-- 指定在txAdvice切入点应用txAdvice事务增强处理 -->
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
</beans>